<?php

/**
 * Implements hook_init().
 */
function context_eaesy_init() {
  
  $context_easys = context_easy_get_contexts();
  drupal_set_message($context_easys);
  
  // Register plugins
  foreach ($context_easys as $key => $context_easy) {
    $type = $context_easy['type'];
    
    if ($plugin = context_get_plugin($type, 'context_easy_' . $type . '_' . $key)) {
      drupal_set_message($plugin);
      $plugin->execute();
    }
    
  }
  
}


/**
 * Implements hook_context_plugins().
 */
function context_easy_context_plugins() {
  $plugins = array();
  
  $context_easys = context_easy_get_contexts();
  
  foreach ($context_easys as $key => $context_easy) {
    $type = $context_easy['type'];
    
    $plugins['context_easy_' . $type . '_' . $key] = array(
      'handler' => array(
        'path' => drupal_get_path('module', 'context_easy') . '/plugins',
        'file' => 'context_easy_' . $type . '.inc',
        'class' => 'context_easy_' . $type . '_' . $key,
        'parent' => 'context_' . $type,
      ),
    );
    
    
  }
  drupal_set_message($plugins);
  return $plugins;
}


/**
 * Implements hook_context_registry().
 */
function context_easy_context_registry() {
  $registry = array();
  
  $context_easys = context_easy_get_contexts();
  
  foreach ($context_easys as $key => $context_easy) {
    $type = $context_easy['type'];
    
    $registry[$type . 's']['context_easy_' . $type . '_' . $key] = array(
      'title' => t($context_easy['title']),
      'description' => t($context_easy['description']),
      'plugin' => 'context_easy_' . $type . '_' . $key,
    );
  }
  drupal_set_message($registry);
  return $registry;
}


/**
 * Returns all conditions and reactions defined with hook_context_easy().
 */
function context_easy_get_contexts() {
  $contexts = module_invoke_all('context_easy');  
  return $contexts;
}
